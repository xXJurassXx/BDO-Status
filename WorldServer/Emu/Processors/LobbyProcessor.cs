using System;
using System.Collections.Generic;
using System.Linq;
using Commons.Enums;
using Commons.Models.Character;
using Commons.UID;
using Commons.Utils;
using FluentNHibernate.Cfg;
using FluentNHibernate.Cfg.Db;
using NHibernate;
using NHibernate.Tool.hbm2ddl;
using NHibernate.Util;
using NLog;
using WorldServer.Configs;
using WorldServer.Emu.Extensions;
using WorldServer.Emu.Interfaces;
using WorldServer.Emu.Models.Creature.Player;
using WorldServer.Emu.Models.MySql.Mapping.WorldMap;
using WorldServer.Emu.Models.Storages;
using WorldServer.Emu.Models.Storages.Abstracts;
using WorldServer.Emu.Networking;
using WorldServer.Emu.Networking.Handling.Frames.Send;
using WorldServer.Emu.Networking.Handling.Frames.Send.OPSBlob;
/*
Author:Sagara
*/
namespace WorldServer.Emu.Processors
{
    public class LobbyProcessor : IProcessor
    {
        /// <summary>
        /// Logger for this class
        /// </summary>
        private static readonly Logger Log = LogManager.GetCurrentClassLogger();

        /// <summary>
        /// Game server dao factory
        /// </summary>
        private static ISessionFactory _gsDbFactory;

        private static object _gsObj;

        /// <summary>
        /// Character uids generator
        /// </summary>
        private static Int32UidFactory _characterUidsFactory;

        /// <summary>
        /// Items uids generator
        /// </summary>
        private static Int32UidFactory _itemsUidsFactory;

        /// <summary>
        /// Game session uid`s generator
        /// </summary>
        private static Int32UidFactory _gameSessionFactory;

        /// <summary>
        /// Initilize service action
        /// </summary>
        /// <param name="previousInstanceContext"></param>
        public void OnLoad(object previousInstanceContext)
        {
            var config = Fluently.Configure().Database(MySQLConfiguration.Standard.ConnectionString(cs => cs.Is(
                    $"Server={CfgDatabase.Default.GameServerDaoHost};" +
                    $"Database={CfgDatabase.Default.GameServerDaoDatabase};" +
                    $"User={CfgDatabase.Default.GameServerDaoUsername}" +
                    $";Password={CfgDatabase.Default.GameServerDaoPassword};" +
                    "CharSet=utf8"))).Mappings(m =>
                    {
                        m.FluentMappings.AddFromNamespaceOf<CharacterMap>().AddFromNamespaceOf<StorageMap>();
                    });
            
            var export = new SchemaUpdate(config.BuildConfiguration());

            export.Execute(false, true);

            _gsDbFactory = config.BuildSessionFactory();

            var usedIds =  //Get all used character id`s
                _gsDbFactory.OpenSession().CreateSQLQuery("select `c_character_id` from `bd_characters`").List();

            var usedItemUids = _gsDbFactory.OpenSession().CreateSQLQuery("select `i_item_uid` from `bd_items`").List();

            if (usedIds.Any())
            {
                var cId = int.Parse(usedIds[usedIds.Count - 1].ToString());

                _characterUidsFactory = new Int32UidFactory(cId);
            }
            else _characterUidsFactory = new Int32UidFactory();
            
            if (usedItemUids.Any())
            {
                var iUid = int.Parse(usedItemUids[usedItemUids.Count - 1].ToString());

                _itemsUidsFactory = new Int32UidFactory(iUid);
            }
            else _itemsUidsFactory = new Int32UidFactory();

            _gameSessionFactory = new Int32UidFactory();
            _gsObj = new object();
        }

        public void GetCharacterList(ClientConnection connection)
        {
            using (var db = _gsDbFactory.OpenSession())
            {
                var list = db.QueryOver<CharacterData>().Where(p => p.AccountId == connection.Account.Id).List();
                
                if(list != null)
                    connection.Characters = (List<CharacterData>) list;
                else
                    connection.Characters = new List<CharacterData>();

                foreach (var characterData in connection.Characters)               
                    characterData.EquipmentData = new EquipmentStorage(db.QueryOver<CharacterItem>().Where(i => 
                    i.CharacterId == characterData.CharacterId && i.StorageType == (int)StorageType.Equipment).List().ToDictionary<CharacterItem, short, AStorageItem>(e => 
                    (short)(e.Slot + 1), e => new InventoryItem(e.ItemId, e.Count) {StorageType = (StorageType) e.StorageType}), 48);

				// SMSG_LoginUserToFieldServer
				//new SpRaw("00000000AC110000019CB300F2A2AC2064450300000000004300680061006F007300470061006D0065007300000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFF00000100FFFFFFFFFFFFFFFF00000000000000000103008CEB454FD7946A000052006500640042006C006F006F0064006500640057006F006D0061006E0000000000000000000000000000000000000000000000000000000000000000000600000004000000A1280000FFFFFFFFFFFFFFFF3200FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0005290000FFFFFFFFFFFFFFFF3200FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000FEFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000600000000010000000700000000000000000004000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000200000000000000000200000000000000FE000000000000000002000000000000000100FC0000000000000100FC0000000000000002FF00000000000000FEFF0000000000000000FF000000000000002E00020100020100020000020000000000000000F800FC0000000000FC00FCFC000000000000000000050505050505000000000000FCFDFDFCFDFDFEFDFDFEFDFDFCFCFCFCFCFC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000646464320064150032326464000408010032323200004432323201010032323200060017623D114047321422641701000000010001014E00003F00001B3A3E3A0000372C443200004133642400001B3A3E3A0000372C4432000041336424000000643232326464640001000000000000000000000000000000000000000000000064000000080000000000000060A0DEED1700000090A1000000000000B0F6A485FE7F000090A1000000000000703EC7E417000000001000000000000054EC9EF717000000B8EC9EFFFFFFFFFFFFFFFF0077A1E956000000008AFBE65600000000009EF8C700E08AC480C6D647FFFFFFFFFFFFFFFF0000C5F2EA560000000000000000000000000000000000000000000000000000A009DEED17000000C058", 0x0C99).SendRaw(connection);
				// SMSG_FixedCharge
				//new SpRaw("FEFFFFFFFFFFFFFF00", 0x0C78).SendRaw(connection);

				new SMSG_LoginUserToFieldServer(connection.Account, connection.Characters).Send(connection);
                new SMSG_FixedCharge();
            }
        }

        public void CreateCharacterProcess(ClientConnection connection, CharacterData info)
        {
            var characterData = info;

            using (var db = _gsDbFactory.OpenSession())
            {
                if (db.QueryOver<CharacterData>().Where(s => s.CharacterName == info.CharacterName).Take(1).SingleOrDefault() != null)
                {
                    new SMSG_CreateCharacterToFieldNak().Send(connection);

                    return;
                }
                   
                using (var transaction = db.BeginTransaction())
                {
                    try
                    {
                        characterData.CharacterId = _characterUidsFactory.Next();
                        characterData.Surname = connection.Account.FamilyName;
                        characterData.Level = 1;
                        characterData.CreationDate = DateTime.Now;
                        characterData.CreatedId = 0; // for nhibernate driver

						/* TEMP FIX UNTIL DATA IS FOUND AND LOADED */
						switch (characterData.ClassType)
						{
							case ClassType.Warrior:
                                characterData.PositionX = -153728;
								characterData.PositionY = 531;
								characterData.PositionZ = 130574;
								break;
							case ClassType.Ranger:
                                characterData.PositionX = -138793;
								characterData.PositionY = -1208;
								characterData.PositionZ = 137342;
								break;
							case ClassType.Sorcerer:
                                characterData.PositionX = -135621;
								characterData.PositionY = 802;
								characterData.PositionZ = 107359;
								break;
							case ClassType.Giant:
                                characterData.PositionX = -120118;
								characterData.PositionY = -1625;
								characterData.PositionZ = 118794;
								break;
							case ClassType.Tamer:
                                characterData.PositionX = -159853;
								characterData.PositionY = 2089;
								characterData.PositionZ = 123726;
								break;
							case ClassType.BladeMaster:
                                characterData.PositionX = -154408;
								characterData.PositionY = -335;
								characterData.PositionZ = 135204;
								break;
							case ClassType.BladeMasterWomen:
								characterData.PositionX = -154408;
								characterData.PositionY = -335;
								characterData.PositionZ = 135204;
								break;
							case ClassType.Valkyrie:
                                characterData.PositionX = -145479;
								characterData.PositionY = 2185;
								characterData.PositionZ = 110947;
								break;
							case ClassType.Kunoichi:
                                characterData.PositionX = -136152;
								characterData.PositionY = -730;
								characterData.PositionZ = 128869;
								break;
							case ClassType.Ninja:
								characterData.PositionX = -136152;
								characterData.PositionY = -730;
								characterData.PositionZ = 128869;
								break;
							case ClassType.Wizard:
                                characterData.PositionX = -157013;
								characterData.PositionY = 946;
								characterData.PositionZ = 128052;
								break;
							case ClassType.WizardWomen:
								characterData.PositionX = -157013;
								characterData.PositionY = 946;
								characterData.PositionZ = 128052;
								break;
						}

                        var inventory = InventoryStorage.GetDefault(characterData.ClassType);
                        foreach (var daoItem in inventory.Items.Select(item => new CharacterItem
                        {
                            CharacterId = characterData.CharacterId,
                            ItemId = item.Value.ItemId,
                            ItemUid = _itemsUidsFactory.Next(),
                            Slot = item.Key - 1,
                            Count = item.Value.Count,
                            StorageType = (int) ((InventoryItem)item.Value).StorageType
                        }))                       
                            db.Save(daoItem);
                        
                        db.Save(characterData);

                        connection.Characters.Add(characterData);

                        new SMSG_CreateCharacterToField(characterData).Send(connection, false);

                        transaction.Commit();
                    }
                    catch (Exception ex)
                    {
                        transaction.Rollback();
                        Log.Error($"Cannot create character\n{ex}");
                    }                   
                }
            }          
        }

        public void DeleteCharacterProcess(ClientConnection connection, long characterId)
        {
            using (var db = _gsDbFactory.OpenSession())
            {
                using (var transaction = db.BeginTransaction())
                {
                    try
                    {
                        var deletionTime = (int)(DateTime.Now.UnixMilliseconds() / 1000);
                        var deleted = connection.Characters.First(s => s.CharacterId == characterId);

                        var equipment = db.QueryOver<CharacterItem>().Where(i => i.CharacterId == deleted.CharacterId).List();
                        for (int i = 0; i < equipment.Count; i++)
                            db.Delete(equipment[i]);
                        
                        db.Delete(deleted);

						// TODO: Delayed removed task
						bool isDelayedDelete = false;
                        new SMSG_RemoveCharacterFromField(characterId, isDelayedDelete, deletionTime).Send(connection);

                        transaction.Commit();
                    }
                    catch(Exception ex)
                    {
                        transaction.Rollback();
                        Log.Error(ex);
                    }
                }
            }
        }

        public void UpdateCharacter(ClientConnection connection)
        {
            using (var db = _gsDbFactory.OpenSession())
            {
                using (var transaction = db.BeginTransaction())
                {
                    try
                    {
                        var equipment = db.QueryOver<CharacterItem>().Where(i => i.CharacterId == connection.ActivePlayer.DatabaseCharacterData.CharacterId).List();
                        for (int i = 0; i < equipment.Count; i++)
                            db.Delete(equipment[i]);

                        /*Update inventory items*/
                        foreach (var daoItem in connection.ActivePlayer.Inventory.Items.Select(item => new CharacterItem
                        {
                            CharacterId = connection.ActivePlayer.DatabaseCharacterData.CharacterId,
                            ItemId = item.Value.ItemId,
                            ItemUid = _itemsUidsFactory.Next(),
                            Slot = item.Key - 1,
                            Count = item.Value.Count,
                            StorageType = (int)((InventoryItem)item.Value).StorageType
                        })) db.Save(daoItem);

                        /*Update equipment items*/
                        foreach (var daoItem in connection.ActivePlayer.Equipment.Items.Select(item => new CharacterItem
                        {
                            CharacterId = connection.ActivePlayer.DatabaseCharacterData.CharacterId,
                            ItemId = item.Value.ItemId,
                            ItemUid = _itemsUidsFactory.Next(),
                            Slot = item.Key - 1,
                            Count = item.Value.Count,
                            StorageType = (int)((InventoryItem)item.Value).StorageType
                        }))db.Save(daoItem);

                        db.Update(connection.ActivePlayer.DatabaseCharacterData);

                        transaction.Commit();
                    }
                    catch (Exception ex)
                    {
                        Log.Error($"Cannot update player id:{connection.ActivePlayer.DatabaseCharacterData.CharacterId} exception:\n{ex}");

                        transaction.Rollback();
                    }
                }
            }
        }

		public void InitialEnterWorld(ClientConnection connection, long characterId)
		{
			
			var player = new Player(connection, connection.Characters.First(s => s.CharacterId == characterId))
			{
				GameSessionId = _gameSessionFactory.Next(),
			};

			using (var db = _gsDbFactory.OpenSession())
			{
				var daoItems = db.QueryOver<CharacterItem>().Where(i => i.CharacterId == characterId).List();
				var items = new List<CharacterItem>();
				var equipItems = new List<CharacterItem>();

				foreach (var it in daoItems)
				{
					if (it.StorageType == (int)StorageType.Equipment)
						equipItems.Add(it);
					if (it.StorageType == (int)StorageType.Inventory)
						items.Add(it);
				}

				player.Inventory = new InventoryStorage(items.ToDictionary<CharacterItem, short, AStorageItem>(e => (short)(e.Slot + 1), e => new InventoryItem(e.ItemId, e.Count) { StorageType = (StorageType)e.StorageType }), 48);
				player.Equipment = new EquipmentStorage(equipItems.ToDictionary<CharacterItem, short, AStorageItem>(e => (short)(e.Slot + 1), e => new InventoryItem(e.ItemId, e.Count) { StorageType = (StorageType)e.StorageType }), 48);
			}

			connection.ActivePlayer = player;
			connection.ActivePlayer.PlayerActions += (action, parameters) =>
			{
				switch (action)
				{
					case Player.PlayerAction.Logout:
						if (connection.ActivePlayer != null)
						{
							UpdateCharacter(connection);
							_gameSessionFactory.ReleaseUniqueInt(connection.ActivePlayer.GameSessionId);
						}
						break;
				}
			};

			var sessionId = BitConverter.GetBytes(connection.ActivePlayer.GameSessionId).ToHex();
			var uid = BitConverter.GetBytes(connection.ActivePlayer.Uid).ToHex();
			
			new SMSG_CancelFieldEnterWaiting().Send(connection);
			new SMSG_SetGameTime().Send(connection);
			new SMSG_EnterPlayerCharacterToField(connection.ActivePlayer).Send(connection);
			new SMSG_LoadField().Send(connection);
			new SMSG_AddPlayers(connection.ActivePlayer, 1).Send(connection);
			new SMSG_PlayerLogOnOff(connection.ActivePlayer).Send(connection);
			new SMSG_LoadFieldComplete().Send(connection);
			new SMSG_EnterPlayerCharacterToFieldComplete().Send(connection);
			new SMSG_RefreshPcCustomizationCache(connection.ActivePlayer).Send(connection);
			new SMSG_RefreshPcLearnedActiveSkillsCache(connection.ActivePlayer).Send(connection);
			new SBpPlayerSpawn.SMSG_RefreshPcEquipSlotCache(connection.ActivePlayer).Send(connection);
			new SBpPlayerSpawn.SMSG_RefreshUserBasicCache(connection.ActivePlayer).Send(connection);
			new SBpPlayerSpawn.SMSG_RefreshPcBasicCache(connection.ActivePlayer).Send(connection);

			/*
			// SMSG_CancelFieldEnterWaiting
			new SpRaw("000000000000000000000000", 0x0CF4).SendRaw(connection);
			// SMSG_SetGameTime
			new SpRaw("77E6EA560000000000000000B3E3E1060000000000A0AE5600000000000000000000000000", 0x0D54).SendRaw(connection);
			// SMSG_EnterPlayerCharacterToField
			new SpRawx0CE4).SendRaw(connection);
			// SMSG_LoadField
			new SpRaw("", 0x0CFE).SendRaw(connection);
			// SMSG_VariExtendSlot
			new SpRaw("010000", 0x1164).SendRaw(connection);
			// SMSG_SkillList
			new SpRaw("0108270001004905000100890600010088060001008A020001008A06000100170400010087060001007E02000100BE04000100DD000001001D040001002504000100230400010016040001008405000100860200010086050001008305000100B1020001008D020001008C020001004F05000100CF000001008F020001008E02000100CB000001008B0200010081020001008002000100900200010093020001007F020001005C00000100DC00000100DE0000010058000001007C010001002004000100180400", 0x0D15).SendRaw(connection);
			// SMSG_SkillAwakenList
			new SpRaw("0000", 0x113E).SendRaw(connection);
			// SMSG_InventorySlotCount
			new SpRaw("12", 0x0C47).SendRaw(connection);
			// SMSG_AddItemToInventory
			new SpRawx0BF1).SendRaw(connection);
			new SpRaw("0101019CB3000000000000000000000000000200100107000000C800000000000000FFFFFFFFFFFFFFFF0000000000000000000100FF7FFF7F810E5251D7946A00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000000000000010026E4200000100000000000000FFFFFFFFFFFFFFFF0000000000000000000100FF7FFF7FEC0E5251D7946A00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000000000000000000000", 0x0BF1).SendRaw(connection);
			// SMSG_GetAllEquipSlot
			new SpRawx0D67).SendRaw(connection);
			// SMSG_LifeExperienceInformation * 9
			new SpRaw("00010000000000000000000000", 0x1089).SendRaw(connection);
			new SpRaw("01010000000000000000000000", 0x1089).SendRaw(connection);
			new SpRaw("02010000000000000000000000", 0x1089).SendRaw(connection);
			new SpRaw("03010000000000000000000000", 0x1089).SendRaw(connection);
			new SpRaw("04010000000000000000000000", 0x1089).SendRaw(connection);
			new SpRaw("05010000000000000000000000", 0x1089).SendRaw(connection);
			new SpRaw("06010000000000000000000000", 0x1089).SendRaw(connection);
			new SpRaw("07010000000000000000000000", 0x1089).SendRaw(connection);
			new SpRaw("08010000000000000000000000", 0x1089).SendRaw(connection);
			// SMSG_PaymentPassword
			new SpRaw("0077E6EA56000000000747F8593300000000D2DA91B4000000004FEC1DD201000000C3615D160100000021E9FFAB0100000058B599E40100000099747B61000000002991FDF500000000C39B5DDE01000000EFA508A1000000009F4D912C01000000D0E7FC420200000081E2840E000000008929F016010000009948079101000000181BC443010000007728217800000000CB8591F8000000001140914802000000F34B1BA401000000.", 0x0CDF).SendRaw(connection);
			// SMSG_ListFitnessExperience
			new SpRaw("00000000010000000E01000000000000010000000100000000000000000000000200000001000000000000000000000000000000000000000000000000000000", 0x108B).SendRaw(connection);
			// SMSG_SetCharacterLevels
			new SpRaw("8CE9FFFFFFFFFFFF8CE9FFFFFFFFFFFF019CB30006000000BA00000000000000D701000000000000000000000000000000", 0x0F80).SendRaw(connection);
			// SMSG_SetCharacterPrivatePoints
			new SpRaw("019CB300707B19000000000000007A440000000000000000000000000000400D0300400D0300400D0300400D0300", 0x0F7A).SendRaw(connection);
			// SMSG_SetCharacterStats
			new SpRaw("01019CB3000000E0400000E0400000284100006041000060400000000000000000707B190000000000010000000000C040030000000000000040420F00000000000000000000000000", 0x0F7D).SendRaw(connection);
			// SMSG_SetCharacterSpeeds
			new SpRaw("000000000000000000000000", 0x0F7F).SendRaw(connection);
			// SMSG_SetCharacterSkillPoints
			new SpRaw("0100050008008C080000", 0x0F82).SendRaw(connection);
			// SMSG_SetCharacterProductSkillPoints
			new SpRaw("0000000000000000", 0x0F86).SendRaw(connection);
			// SMSG_UpdateStamina
			new SpRaw("02E8030000C8000000E8030000", 0x0EBE).SendRaw(connection);
			// SMSG_SetCharacterStatPoint
			new SpRaw("019CB3000500000005000000050000000A0000000A0000000A0000000000000005000000000000000500000000000000050000000000000005000000", 0x0F7C).SendRaw(connection);
			// SMSG_QuickSlotList
			new SpRawx0D2C).SendRaw(connection);
			// SMSG_ListQuestSelectType
			new SpRaw("00000000000000000000000000000000000000000000000000", 0x0E88).SendRaw(connection);
			// SMSG_ListQuestSortType
			new SpRaw("00000000000000000000", 0x0E8B).SendRaw(connection);
			// SMSG_SetMurdererState
			new SpRaw("019CB3000000000000000000", 0x0D44).SendRaw(connection);
			// SMSG_ExplorePointList
			new SpRaw("01000000000000000A00000000000000", 0x0E9B).SendRaw(connection);
			// SMSG_SupportPointList
			new SpRaw("01000000000000000100000000000000", 0x0EC0).SendRaw(connection);
			// SMSG_ProgressingQuestList
			new SpRaw("02009E000400000000000000000000000000000000000000000077FDE6560000000092010100000000000000000000000000000000000000000078FDE65600000000", 0x0E5C).SendRaw(connection);
			// SMSG_ClearedQuestList
			new SpRaw("0C00F701010000000000000000009F00010000000000000000009E00010000000000000000009F00020000000000000000009F0003000000000000000000E9036B0000000000000000009F00040000000000000000009F00050000000000000000009F00060000000000000000009F00070000000000000000009E00030000000000000000009E0002000000000000000000", 0x0E5D).SendRaw(connection);
			// SMSG_ListCheckedQuest
			new SpRaw("3530332C302C3135382C342C3430322C312C00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 0x0E5E).SendRaw(connection);
			// SMSG_UpdateTitleKey
			new SpRaw("00000000019CB300", 0x0CE2).SendRaw(connection);
			// SMSG_ListIntimacy
			new SpRaw("1900FD9E01000000659C01000000FE9E010000009E9E01000000669C01000000039F010000009B9E01000000FF9E01000000029F01000000049F01000000059F01000000069F01000000089F01000000099F010000000A9F010000000B9F010000000C9F010000000D9F0A0000000E9F01000000109F01000000119F01000000129F01000000139F01000000149F010000007CC501000000", 0x0EC2).SendRaw(connection);
			// SMSG_ExplorationInfo
			new SpRaw("000006003D00000001000000000000000000400000000000000000000000000042000000000000000000000000006C00000000000000000000000000C900000000000000000000000000CB00000000000000000000000000", 0x0E9D).SendRaw(connection);
			// SMSG_UpdateExplorationPoint
			new SpRaw("0000", 0x0EA0).SendRaw(connection);
			// SMSG_PlantInfo
			new SpRaw("0000", 0x0EC7).SendRaw(connection);
			new SpRaw("0000", 0x0EC7).SendRaw(connection);
			new SpRaw("0000", 0x0EC7).SendRaw(connection);
			// SMSG_ReservedLearningSkill
			new SpRaw("000000000300000000000000", 0x0D31).SendRaw(connection);
			// SMSG_ListHouseForTownManagement
			new SpRaw("0000", 0x0E8E).SendRaw(connection);
			// SMSG_ListHouseLargeCraft
			new SpRaw("0000", 0x0E8F).SendRaw(connection);
			// SMSG_SetWp
			new SpRaw("20001E00", 0x0C6F).SendRaw(connection);
			// SMSG_ListMyVendor
			new SpRaw("0000", 0x0FE6).SendRaw(connection);
			// SMSG_ListProgressChallenge
			//new SpRaw("000000", 0x10CA).SendRaw(connection);
			// SMSG_ListCompleteChallenge
			//new SpRaw("000000", 0x10CB).SendRaw(connection);
			// SMSG_ListPalette
			new SpRaw("01000000", 0x0C2B).SendRaw(connection);
			// SMSG_AddPlayers
			new SpRawx0BB9).SendRaw(connection);
			// SMSG_ChargeUser
			new SpRaw("000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 0x0C0A).SendRaw(connection);
			// SMSG_PlayerLogOnOff
			new SpRaw("019CB30064450300000000008CEB454FD7946A0077E6EA560000000000000000000000002000000052006500640042006C006F006F0064006500640057006F006D0061006E000000000000000000000000000000000000000000000000000000000000000000060000008CE9FFFFFFFFFFFF4300680061006F007300470061006D0065007300000000000000000000000000000000000000000000000000000000000000000000000000000000000000E2000300", 0x0D47).SendRaw(connection);
			// SMSG_AddGuildHouseCraftList
			new SpRaw("8CE9FFFFFFFFFFFF0000", 0x1010).SendRaw(connection);
			// SMSG_DailyWorkingCountList
			new SpRaw("8CE9FFFFFFFFFFFF0000", 0x1012).SendRaw(connection);
			// SMSG_SetMyHouseForTownManagement
			new SpRaw("00000000000000000000010100", 0x0E96).SendRaw(connection);
			// SMSG_MaidInfoTotal
			new SpRaw("0000", 0x0FBB).SendRaw(connection);
			// SMSG_SetSubResourcePoints
			new SpRaw("019CB30000000000000000000000204100000000", 0x0F77).SendRaw(connection);
			// SMSG_SetCharacterPublicPoints
			new SpRaw("8CE9FFFFFFFFFFFF8CE9FFFFFFFFFFFF019CB300000000000000000000003A4300003A4300003A4300FCFFFF", 0x0F72).SendRaw(connection);
			// SMSG_SetCharacterRelatedPoints
			new SpRaw("8CE9FFFFFFFFFFFF8CE9FFFFFFFFFFFF019CB3000000000000000000A3000000A3000000A300000000", 0x0F73).SendRaw(connection);
			// SMSG_LoadCustomizedKeys
			new SpRawx10B6).SendRaw(connection);
			// SMSG_BidTerritoryTradeAuthority
			new SpRaw("00000000FFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 0x0F4F).SendRaw(connection);
			// SMSG_SupplyTerritoryStart
			new SpRaw("00000000000000000000000000", 0x0F99).SendRaw(connection);
			// SMSG_LoadFieldComplete
			new SpRaw("", 0x0CFF).SendRaw(connection);
			// SMSG_EnterPlayerCharacterToFieldComplete
			new SpRaw("0101010200000001", 0x0CE5).SendRaw(connection);
			// SMSG_EnablePvP
			new SpRaw("019CB3000000", 0x0D41).SendRaw(connection);
			// SMSG_EnableAdrenalin
			new SpRaw("00", 0x0D45).SendRaw(connection);
			// SMSG_NotifyVariableTradeItem
			new SpRaw("0000000080841E0080841E0080841E0080841E0080841E0080841E0080841E0080841E0080841E0007A1FFFF38000100", 0x0C54).SendRaw(connection);
			// SMSG_GetAuctionTime
			new SpRaw("675C9D5F00000000", 0x0F05).SendRaw(connection);
			// SMSG_UpdateAccessibleServer
			new SpRaw("2601E20077E6EA560000000000EAEA5600000000", 0x10C7).SendRaw(connection);
			*/
		}

		public void PrepareForEnterOnWorld(ClientConnection connection, long characterId)
        {
			/*
            var player = new Player(connection, connection.Characters.First(s => s.CharacterId == characterId))
            {
                GameSessionId = _gameSessionFactory.Next(),
            };

            using (var db = _gsDbFactory.OpenSession())
            {
                var daoItems = db.QueryOver<CharacterItem>().Where(i => i.CharacterId == characterId).List();
                var items = new List<CharacterItem>();
                var equipItems = new List<CharacterItem>();

                foreach (var it in daoItems)
                {
                    if (it.StorageType == (int) StorageType.Equipment)
                        equipItems.Add(it);
                    if (it.StorageType == (int) StorageType.Inventory)
                        items.Add(it);
                }
                
                player.Inventory = new InventoryStorage(items.ToDictionary<CharacterItem, short, AStorageItem>(e => (short)(e.Slot + 1), e => new InventoryItem(e.ItemId, e.Count) {StorageType = (StorageType) e.StorageType}), 48);
                player.Equipment = new EquipmentStorage(equipItems.ToDictionary<CharacterItem, short, AStorageItem>(e => (short)(e.Slot + 1), e => new InventoryItem(e.ItemId, e.Count) {StorageType = (StorageType) e.StorageType}), 48);
            }

            connection.ActivePlayer = player;
            connection.ActivePlayer.PlayerActions += (action, parameters) =>
            {
                switch (action)
                {
                    case Player.PlayerAction.Logout:
                        if (connection.ActivePlayer != null)
                        {
                            UpdateCharacter(connection);
                            _gameSessionFactory.ReleaseUniqueInt(connection.ActivePlayer.GameSessionId);
                        }
                        break;                       
                }
            };

            var sessionId = BitConverter.GetBytes(connection.ActivePlayer.GameSessionId).ToHex();

			// SMSG_CancelFieldEnterWaiting
			new SpRaw("000000000000000000000000", 0x0CF4).SendRaw(connection);
			// SMSG_RefreshGuildSeqNo
			new SpRawx10B0).SendRaw(connection);
			// SMSG_SetGameTime
			new SpRaw("97FBE6560000000000000000EEA254110000000000A0AE5600000000000000000000000000", 0x0D52).SendRaw(connection);
			// SMSG_EnterPlayerCharacterToField
			new SMSG_EnterPlayerCharacterToField(connection.ActivePlayer).Send(connection);
			// SMSG_LoadField
			new SpRaw("", 0x0CFE).SendRaw(connection);
			// SMSG_VariExtendSlot
			new SpRaw("010000", 0x1162).SendRaw(connection);
			// SMSG_SkillList
			new SpRaw("011825000100D905000100890600010008030001008806000100BA050001008A020001008A0600010087060001007E02000100BE04000100C4050001008C02000100CC05000100B1020001000D030001008D02000100CF000001008F02000100CE020001008E02000100CB000001008B020001008602000100810200010080020001009002000100D3020001009302000100EB02000100E002000100D7020001007F02000100DD000001005C00000100DC00000100DE00000100580000", 0x0D15).SendRaw(connection);
			// SMSG_SkillAwakenList
			new SpRaw("0000", 0x113C).SendRaw(connection);
			// SMSG_InventorySlotCount
			new SpRaw("12", 0x0C47).SendRaw(connection);
			// SMSG_AddItemToInventory
			new SMSG_AddItemToInventory(connection.ActivePlayer).Send(connection);
			// SMSG_AddItemToInventory
			new SpRaw("0101" + sessionId + "0000000000000000000000000000", 0x0BF1).SendRaw(connection);
			// SMSG_GetAllEquipSlot
			new SMSG_GetAllEquipSlot(connection.ActivePlayer).Send(connection);
			// SMSG_LifeExperienceInformation * 9
			new SpRaw("00010000000000000000000000", 0x1087).SendRaw(connection);
            new SpRaw("01010000000000000000000000", 0x1087).SendRaw(connection);
            new SpRaw("02010000000000000000000000", 0x1087).SendRaw(connection);
            new SpRaw("03010000000000000000000000", 0x1087).SendRaw(connection);
            new SpRaw("04010000000000000000000000", 0x1087).SendRaw(connection);
            new SpRaw("05010000000000000000000000", 0x1087).SendRaw(connection);
            new SpRaw("06010000000000000000000000", 0x1087).SendRaw(connection);
            new SpRaw("07010000000000000000000000", 0x1087).SendRaw(connection);
            new SpRaw("08010000000000000000000000", 0x1087).SendRaw(connection);
			// SMSG_PaymentPassword
			new SpRaw("01DE5A8956000000000E169110DA01000000FA91E2EF01000000BFF1B3AF000000005EFCB343020000009A8ECBC1010000005721E3C301000000B9B43E6E000000007795A06D00000000E580AAC100000000696C543F00000000A97850BF0100000026309223000000001DE008A200000000BF0248CE00000000A132F53000000000614D6B6601000000B89CABD1000000002CF9D01D01000000ECE8F4CE00000000898179FF00000000", 0x0CDF).SendRaw(connection);
			// SMSG_ListFitnessExperience
			new SpRaw("00000000010000000000000000000000010000000100000000000000000000000200000001000000000000000000000000000000000000000000000000000000", 0x1089).SendRaw(connection);
        */
		}

        public void EnterOnWorldProcess(ClientConnection connection, int gameSession)
        {
			/*
            var sessionId = BitConverter.GetBytes(connection.ActivePlayer.GameSessionId).ToHex();
            var uid = BitConverter.GetBytes(connection.ActivePlayer.Uid).ToHex();

			// SMSG_SetCharacterLevels
			new SMSG_SetCharacterLevels(connection.ActivePlayer).Send(connection);
			// SMSG_SetCharacterPrivatePoints
			new SpRaw(sessionId + "60E316000000000000007A440000000000000000000000000000400D0300400D0300400D0300400D0300", 0x0F78).SendRaw(connection);
			// SMSG_SetCharacterStats
			new SpRaw("01" + sessionId + "00004040000080400000803F0000803F00004040000000000000000060E3160000000000010000000000C040000000000000000040420F00000000000000000000000000", 0x0F7B).SendRaw(connection);
			// SMSG_SetCharacterSpeeds
			new SpRaw("000000000000000000000000", 0x0F7D).SendRaw(connection);
			// SMSG_SetCharacterSkillPoints
			new SpRaw("00000000000000000000", 0x0F80).SendRaw(connection);
			// SMSG_SetCharacterProductSkillPoints
			new SpRaw("0000000000000000", 0x0F84).SendRaw(connection);
			// SMSG_UpdateStamina
			new SpRaw("02E8030000C8000000E8030000", 0x0EBC).SendRaw(connection);
			// SMSG_SetCharacterStatPoint
			new SpRaw(sessionId + "0500000005000000050000000A0000000A0000000A0000000000000005000000000000000500000000000000050000000000000005000000", 0x0F7A).SendRaw(connection);
			// SMSG_QuickSlotList
			new SpRaw(uidx0D2A).SendRaw(connection);
			// SMSG_ListQuestSelectType
			new SpRaw("00000000000000000000000000000000000000000000000000", 0x0E86).SendRaw(connection);
			// SMSG_ListQuestSortType
			new SpRaw("00000000000000000000", 0x0E89).SendRaw(connection);
			// SMSG_SetMurdererState
			new SpRaw(sessionId + "0000000000000000", 0x0D42).SendRaw(connection);
			//new SpRaw("01000000070006003300000000000000", 0x0e94).SendRaw(connection);
			// SMSG_ListCheckedQuest
			new SpRawx0E5C).SendRaw(connection);
			// SMSG_UpdateTitleKey
			new SpRaw("00000000" + sessionId, 0x0CE2).SendRaw(connection);
			//new SpRaw("07007F020000B2020000C8020000D2020000050000001C000000F0020000", 0x10c1).SendRaw(connection);
			// SMSG_ListIntimacy
			new SpRaw("1900AA7501000000679C010000004F9C0100000029A001000000699C01000000519C010000005DC3010000005D9C01000000649C01000000669C01000000689C010000006C9C01000000839C01000000C19C010000009B9E01000000129F01000000149F0100000031A00100000037A0010000003BA0010000004CA0010000004DA0010000004EA00100000078A00100000057C301000000", 0x0EC0).SendRaw(connection);
			// SMSG_ExplorationInfo
			new SpRawx0E9B).SendRaw(connection);
			// SMSG_UpdateExplorationPoint
			new SpRaw("0000", 0x0E9E).SendRaw(connection);
			// SMSG_PlantInfo
			new SpRaw("0000", 0x0EC5).SendRaw(connection);
			new SpRaw("0400660000000200000000170000000000DE5A895600000000670000000200000000170000000000DE5A895600000000910100000200000000170000000000DE5A895600000000920100000200000000170000000000DE5A895600000000", 0x0EC5).SendRaw(connection);
			new SpRaw("0000", 0x0EC5).SendRaw(connection);
			// SMSG_ReservedLearningSkill
			new SpRaw("000000000300000000000000", 0x0D2F).SendRaw(connection);
			// SMSG_ListHouseForTownManagement
            new SpRaw("01003F0802000000010000006675615600000000", 0x0E8C).SendRaw(connection);
			// SMSG_ListHouseLargeCraft
			new SpRaw("0000", 0x0E8D).SendRaw(connection);
			//new SpRawx0c6f).SendRaw(connection);
			// SMSG_SetWp
			new SpRaw("00001E00", 0x0C6F).SendRaw(connection);
			// SMSG_ListMyVendor
			new SpRaw("0000", 0x0FE4).SendRaw(connection);
			// SMSG_ListProgressChallenge
			new SpRaw("01350027000000000000000000000000002F000000000000000000000000002E000000000000000000000000002D000000000000000000000000002C000000000000000000000000002B000000000000000000000000002A00000000000000000000000000290000000000000000000000000028000000000000000000000000002600000000000000000000000000250000000000000000000000000024000000000000000000000000002300000000000000000000000000220000000000000000000000000021000000000000000000000000002000000000000000000000000000370000000000000000000000000036000000000000000000000000003500000000000000000000000000340000000000000000000000000033000000000000000000000000003200000000000000000000000000310000000000000000000000000030000000000000000000000000000F000000000000000000000000000E000000000000000000000000000D000000000000000000000000000C000000000000000000000000000B000000000000000000000000000A0000000000000000000000000009001300000000000000000000000800130000000000000000000000070013000000000000000000000006001300000000000000000000000500130000000000000000000000040013000000000000000000000003001300000000000000000000001F000000000000000000000000009F000000000000000000000000001E000000000000000000000000001D000000000000000000000000001C000000000000000000000000001B000000000000000000000000001A00000000000000000000000000190000000000000000000000000018000000000000000000000000001700000000000000000000000000160000000000000000000000000015000000000000000000000000001400000000000000000000000000110000000000000000000000000010000000000000000000000000000100000000000000000000000000", 0x10C8).SendRaw(connection);
			//new SpRaw("010E00A10000000000000000000100F0E5875600000000A2000000000000000000020000000000000000007A000000000000000000A30000000000000000007B0000000000000000007C000000000000000000A0000000000000000000A4000000000000000000A500000000000000000012000000000000000000A600000000000000000013000000000000000000", 0x10c4).SendRaw(connection);
			//new SpRaw("010E00A10001000000010013000000A200010000000200010000007A0001000000A300010000007B00010000007C0001000000A00001000000A40001000000A50001000000120001000000A60001000000130001000000", 0x10c5).SendRaw(connection);
			// SMSG_ListPalette
			new SpRaw("01000000", 0x0C2B).SendRaw(connection);
			
			//new SpRaw("00340B0500FCFFFF601589C8CD2E92460046D5C7601589C8CD2E92460046D5C70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000799E615DCDCCCC3D2E2EC0C7000000000000000000000000000000000000000000007FD6FEBE0000000077095EBF7FD6FEBE0000000077095EBF", 0x0bcd).SendRaw(connection);
			//new SpRaw("00BC4F1200000000000000000000000000000000000000000000000000000000000000000000000000000000000001004D0B00000000E0E1A65F1800000029E2", 0x0d32).SendRaw(connection);
			//new SpRaw("001C590C00FCFFFFC7F6A4C80078FFC5A6DB6B48D42DA6C80078FFC56E3D69480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000E104000000000A30C925CDCCCC3D2E2EC0C700000000000000000000000000030000000000000000BB8ADD3D000000006D7F7E3FBE7FDD3D00000000957F7E3F", 0x0bcd).SendRaw(connection);
			//new SpRaw("00C44F1200000000000000000000000000000000000000000000000000000000000000000000000000000000000001004D0B00000000E0E1A65F18000000FEFF", 0x0d32).SendRaw(connection);
			//new SpRaw("007C580C00FCFFFF3CFD27C80078FFC5B001AD48042B28C80078FFC51F38AD4800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001007000000000A30C925CDCCCC3D2E2EC0C7000000000000000000000000000300000000000000002279C63E00000000B7FB6BBF68597ABF000000009BF655BE", 0x0bcd).SendRaw(connection);
			//new SpRaw("00745A1200000000000000000000000000000000000000000000000000000000000000000000000000000000000001006C0B00000000E0E1A65F18000000FEFF", 0x0d32).SendRaw(connection);
			//new SpRaw("00FC541200000000000000000000000000000000000000000000000000000000000000000000000000000000000001005C0B00000000E0E1A65F18000000FEFF", 0x0d32).SendRaw(connection);
			//new SpRaw("00844F1200000000000000000000000000000000000000000000000000000000000000000000000000000000000001004C0B00000000E0E1A65F18000000FEFF", 0x0d32).SendRaw(connection);
			//new SpRaw("00EC5F1200000000000000000000000000000000000000000000000000000000000000000000000000000000000001007B0B00000000E0E1A65F18000000FEFF", 0x0d32).SendRaw(connection);
					
			// SMSG_AddPlayers
			new SpRaw("010000000100" + sessionId
                      uid +
                      "010000000100000000000000010100000000000000000000000000000000000005FCFFFF250000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FCFFFF00010000000000000003000000000000000000000000000000000000000000000037CA00000000000000000000000000000000000000F8FFFF00000000000000000000000000F8FFFF0000000000000000000000000200000000000000000000000000", 0x0BB9).SendRaw(connection);
			// SMSG_AddPlayers
			new SpRaw("010000010100" + sessionId
                      uid +
                      "010000000100000000000000010100000000000000000000000000000000000005FCFFFF250000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FCFFFF00010000000000000003000000000000000000000000000000000000000000000037CA000000000000000000000000000000000000FFFEFFFF000000000000000000000000FFFFFFFF0000000000000000000000000200000000000000000000000000", 0x0BB9).SendRaw(connection);
			// SMSG_ChargeUser
			new SpRaw("00000000000000000000000000000000000000000000000000000000000000000000000000000000", 0x0C0A).SendRaw(connection);
			// SMSG_PlayerLogOnOff
			new SpRaw(sessionId + "6F09170000000000" +
                      uid +
                      "DE5A89560000000000000000000000002100070054006F006F0048006F007400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000C2DEFFFFFFFFFFFF49006E004300750062006500460054005700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000028001900", 0x0D45).SendRaw(connection);

            new SMSG_RefreshPcCustomizationCache(connection.ActivePlayer).Send(connection);

            Core.Act(s =>
            {
                s.CharacterProcessor.EndLoad(connection);
                s.WorldProcessor.EndLoad(connection);
            });
			*/
        }

		public void BackToServerSelection(ClientConnection connection, int cookieId)
		{
			
			// TODO: method / task
			new SMSG_ExitFieldServerToServerSelection().Send(connection);
		}

		public object OnUnload()
        {
            return null;
        }

        #region static
        public static int GetCharactersCount(int accountId)
        {
            lock (_gsObj)
            using (var db = _gsDbFactory.OpenSession())
                {
                    int count = db.QueryOver<CharacterData>().Where(p => p.AccountId == accountId).List().Count;

                    return count;
                }
        }

        #endregion

    }
}
